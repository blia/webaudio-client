{"version":3,"sources":["index.js"],"names":["playSound","buffer","time","source","context","createBufferSource","connect","destination","start","loadSounds","obj","soundMap","callback","names","paths","name","path","push","bufferLoader","BufferLoader","bufferList","i","length","load","urlList","onload","Array","loadCount","MicrophoneSample","socket","ws","WIDTH","HEIGHT","getMicrophoneInput","canvas","document","querySelector","window","AudioContext","webkitAudioContext","createGain","createGainNode","createDelay","createDelayNode","createScriptProcessor","createJavaScriptNode","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","prototype","loadBuffer","url","index","request","XMLHttpRequest","open","responseType","loader","decodeAudioData","response","alert","error","console","onerror","send","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","isLocalhost","location","hostname","protocol","audio","onStream","bind","onStreamError","stream","input","createMediaStreamSource","filter","createBiquadFilter","frequency","value","type","Q","analyser","createAnalyser","visualize","e","width","height","drawContext","getContext","times","Uint8Array","frequencyBinCount","getByteTimeDomainData","reduce","acc","v","percent","offset","barWidth","fillStyle","fillRect","wsButton","micButton","onclick","onopen","onclose","close","WebSocket","host"],"mappings":"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","file":"webaudio.678ce4f5.map","sourceRoot":"..","sourcesContent":["/*\n * Copyright 2013 Boris Smus. All Rights Reserved.\n\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n // Start off by initializing a new context.\ncontext = new (window.AudioContext || window.webkitAudioContext)();\n\nif (!context.createGain)\n  context.createGain = context.createGainNode;\nif (!context.createDelay)\n  context.createDelay = context.createDelayNode;\nif (!context.createScriptProcessor)\n  context.createScriptProcessor = context.createJavaScriptNode;\n\n// shim layer with setTimeout fallback\nwindow.requestAnimFrame = (function(){\nreturn  window.requestAnimationFrame       ||\n  window.webkitRequestAnimationFrame ||\n  window.mozRequestAnimationFrame    ||\n  window.oRequestAnimationFrame      ||\n  window.msRequestAnimationFrame     ||\n  function( callback ){\n  window.setTimeout(callback, 1000 / 60);\n};\n})();\n\n\nfunction playSound(buffer, time) {\n  var source = context.createBufferSource();\n  source.buffer = buffer;\n  source.connect(context.destination);\n  source[source.start ? 'start' : 'noteOn'](time);\n}\n\nfunction loadSounds(obj, soundMap, callback) {\n  // Array-ify\n  var names = [];\n  var paths = [];\n  for (var name in soundMap) {\n    var path = soundMap[name];\n    names.push(name);\n    paths.push(path);\n  }\n  bufferLoader = new BufferLoader(context, paths, function(bufferList) {\n    for (var i = 0; i < bufferList.length; i++) {\n      var buffer = bufferList[i];\n      var name = names[i];\n      obj[name] = buffer;\n    }\n    if (callback) {\n      callback();\n    }\n  });\n  bufferLoader.load();\n}\n\n\n\n\nfunction BufferLoader(context, urlList, callback) {\n  this.context = context;\n  this.urlList = urlList;\n  this.onload = callback;\n  this.bufferList = new Array();\n  this.loadCount = 0;\n}\n\nBufferLoader.prototype.loadBuffer = function(url, index) {\n  // Load buffer asynchronously\n  var request = new XMLHttpRequest();\n  request.open(\"GET\", url, true);\n  request.responseType = \"arraybuffer\";\n\n  var loader = this;\n\n  request.onload = function() {\n    // Asynchronously decode the audio file data in request.response\n    loader.context.decodeAudioData(\n      request.response,\n      function(buffer) {\n        if (!buffer) {\n          alert('error decoding file data: ' + url);\n          return;\n        }\n        loader.bufferList[index] = buffer;\n        if (++loader.loadCount == loader.urlList.length)\n          loader.onload(loader.bufferList);\n      },\n      function(error) {\n        console.error('decodeAudioData error', error);\n      }\n    );\n  }\n\n  request.onerror = function() {\n    alert('BufferLoader: XHR error');\n  }\n\n  request.send();\n};\n\nBufferLoader.prototype.load = function() {\n  for (var i = 0; i < this.urlList.length; ++i)\n  this.loadBuffer(this.urlList[i], i);\n};\n\n\n\nnavigator.getUserMedia = (navigator.getUserMedia ||\n                          navigator.webkitGetUserMedia ||\n                          navigator.mozGetUserMedia ||\n                          navigator.msGetUserMedia);\nfunction MicrophoneSample() {\n  this.socket = ws;\n  this.WIDTH = 640;\n  this.HEIGHT = 480;\n  this.getMicrophoneInput();\n  this.canvas = document.querySelector('canvas');\n}\n\nMicrophoneSample.prototype.getMicrophoneInput = function() {\n  // TODO(smus): Remove this ugliness.\n  var isLocalhost = window.location.hostname == 'localhost' ||\n      window.location.hostname == '127.0.0.1';\n  if (window.location.protocol != 'https:' && !isLocalhost) {\n    alert('HTTPS is required for microphone access, and this site has no SSL cert yet. Sorry!');\n  }\n  navigator.getUserMedia({audio: true},\n                          this.onStream.bind(this),\n                          this.onStreamError.bind(this));\n};\n\nMicrophoneSample.prototype.onStream = function(stream) {\n  var input = context.createMediaStreamSource(stream);\n  var filter = context.createBiquadFilter();\n  filter.frequency.value = 60.0;\n  filter.type = 'notch';\n  filter.Q = 10.0;\n\n  var analyser = context.createAnalyser();\n\n  // Connect graph.\n  input.connect(filter);\n  filter.connect(analyser);\n\n  this.analyser = analyser;\n  // Setup a timer to visualize some stuff.\n  requestAnimFrame(this.visualize.bind(this));\n};\n\nMicrophoneSample.prototype.onStreamError = function(e) {\n  console.error('Error getting microphone', e);\n};\n\nMicrophoneSample.prototype.visualize = function() {\n  this.canvas.width = this.WIDTH;\n  this.canvas.height = this.HEIGHT;\n  var drawContext = this.canvas.getContext('2d');\n\n  var times = new Uint8Array(this.analyser.frequencyBinCount);\n  this.analyser.getByteTimeDomainData(times);\n  this.socket.send(128 - times.reduce((acc, v) => acc > v ? v : acc, 255));\n  // console.log(times);\n  for (var i = 0; i < times.length; i++) {\n    var value = times[i];\n    var percent = value / 256;\n    var height = this.HEIGHT * percent;\n    var offset = this.HEIGHT - height - 1;\n    var barWidth = this.WIDTH/times.length;\n    drawContext.fillStyle = 'black';\n    drawContext.fillRect(i * barWidth, offset, 1, 1);\n  }\n  requestAnimFrame(this.visualize.bind(this));\n};\n\nconst wsButton = document.querySelector('#wsButton');\nconst micButton = document.querySelector('#micButton');\n\nlet ws;\n\nwsButton.onclick = () => {\n  if (ws) {\n    ws.onerror = ws.onopen = ws.onclose = null;\n    ws.close();\n  }\n  ws = new WebSocket(`wss://${location.host}`);\n}\n\nmicButton.onclick = () => {\n  var sample = new MicrophoneSample();\n}\n"]}